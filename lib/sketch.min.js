var __slice=[].slice;(function(e){var t,n,r,i;return e.fn.sketch=function(){var n,r,i;r=arguments[0],n=2<=arguments.length?__slice.call(arguments,1):[],this.length>1&&e.error("Sketch.js can only be called on one element at a time."),i=this.data("sketch");if(typeof r!="string"||!i)return i?i:(this.data("sketch",new t(this.get(0),r)),this);if(!i[r])return e.error("Sketch.js did not recognize the given command.");if(typeof i[r]=="function")return i[r].apply(i,n);if(n.length===0)return i[r];if(n.length===1)return i[r]=n[0]},t=function(){function t(t,n){this.el=t,this.canvas=e(t),this.context=t.getContext("2d"),this.options=e.extend({toolLinks:!0,defaultTool:"marker",defaultColor:"#000000",defaultSize:5},n),this.painting=!1,this.color=this.options.defaultColor,this.size=this.options.defaultSize,this.tool=this.options.defaultTool,this.actions=[],this.action=[],this.undone=[],this.canvas.bind("click mousedown mouseup mousemove mouseleave mouseout touchstart touchmove touchend touchcancel",this.onEvent),this.options.toolLinks&&e("body").delegate('a[href="#'+this.canvas.attr("id")+'"]',"click",function(t){var n,r,i,s,o,u,a;r=e(this),n=e(r.attr("href")),s=n.data("sketch"),a=["color","size","tool","font"];for(o=0,u=a.length;o<u;o++)i=a[o],r.attr("data-"+i)&&s.set(i,e(this).attr("data-"+i));return e(this).attr("data-download")&&s.download(e(this).attr("data-download")),e(this).attr("data-operation")&&s.operation(e(this).attr("data-operation")),!1})}return t.prototype.download=function(e){var t;return e||(e="png"),e==="jpg"&&(e="jpeg"),t="image/"+e,window.open(this.el.toDataURL(t))},t.prototype.set=function(e,t){return this[e]=t,this.canvas.trigger("sketch.change"+e,t)},t.prototype.startPainting=function(){return this.painting=!0,this.action={tool:this.tool,color:this.color,size:parseFloat(this.size),events:[]}},t.prototype.stopPainting=function(){this.painting=!1;if(this.action)return this.actions.push(this.action),this.action=null,this.redraw()},t.prototype.onEvent=function(t){return t.originalEvent&&t.originalEvent.targetTouches&&(t.pageX=t.originalEvent.targetTouches[0].pageX,t.pageY=t.originalEvent.targetTouches[0].pageY),e.sketch.tools[e(this).data("sketch").tool].onEvent.call(e(this).data("sketch"),t),t.preventDefault(),!1},t.prototype.redraw=function(){var t;this.el.width=this.canvas.width(),this.context=this.el.getContext("2d"),t=this,e.each(this.actions,function(){if(this.tool)return e.sketch.tools[this.tool].draw.call(t,this)});if(this.painting&&this.action)return e.sketch.tools[this.action.tool].draw.call(t,this.action)},t.prototype.setupLine=function(e){return this.context.lineJoin="round",this.context.lineCap="round",this.context.lineWidth=e.size,this.context.strokeStyle=n(e)},t.prototype.operation=function(e){switch(e){case"clear":this.actions=[];break;case"undo":this.actions&&this.undone.push(this.actions.pop());break;case"redo":this.undone&&this.actions.push(this.undone.pop())}return this.redraw()},t}(),e.sketch={tools:{}},e.sketch.tools.marker={onEvent:function(e){switch(e.type){case"mousedown":case"touchstart":this.startPainting();break;case"mouseup":case"mouseout":case"mouseleave":case"touchend":case"touchcancel":this.stopPainting()}if(this.painting)return this.action.events.push({x:e.pageX-this.canvas.offset().left,y:e.pageY-this.canvas.offset().top,event:e.type}),this.redraw()},draw:function(e){var t,n,r,i,s;this.setupLine(e),this.context.beginPath(),this.context.moveTo(e.events[0].x,e.events[0].y),s=e.events;for(r=0,i=s.length;r<i;r++)t=s[r],this.context.lineTo(t.x,t.y),n=t;return this.context.stroke()}},e.sketch.tools.eraser={onEvent:function(t){return e.sketch.tools.marker.onEvent.call(this,t)},draw:function(t){var n;return n=this.context.globalCompositeOperation,this.context.globalCompositeOperation="copy",t.color="rgba(0,0,0,0)",e.sketch.tools.marker.draw.call(this,t),this.context.globalCompositeOperation=n}},e.sketch.tools.rectangle={onEvent:e.sketch.tools.marker.onEvent,draw:function(e){var t,n,r,i;return this.setupLine(e),r=e.events[0],this.context.moveTo(r.x,r.y),t=e.events[e.events.length-1],i=Math.abs(t.x-r.x),n=Math.abs(t.y-r.y),this.context.strokeRect(r.x,r.y,i,n)}},e.sketch.tools.line={onEvent:e.sketch.tools.marker.onEvent,draw:function(e){var t;return this.setupLine(e),t=e.events[e.events.length-1],this.context.beginPath(),this.context.moveTo(e.events[0].x,e.events[0].y),this.context.lineTo(t.x,t.y),this.context.stroke()}},e.sketch.tools.circle={onEvent:e.sketch.tools.marker.onEvent,draw:function(e){var t,n,r,i,s;return this.setupLine(e),s=e.events[0],this.context.moveTo(e.events[0].x,e.events[0].y),i=e.events[e.events.length-1],t=Math.max(i.x,s.x)-Math.abs(i.x-s.x)/2,n=Math.max(i.y,s.y)-Math.abs(i.y-s.y)/2,r=Math.sqrt(Math.sqrt(Math.pow(i.x-s.x,2))+Math.pow(i.y-s.y,2)),this.context.beginPath(),this.context.arc(t,n,r,Math.PI*2,0,!0),this.context.stroke(),this.context.closePath()}},e.sketch.tools.text={onEvent:function(e){switch(e.type){case"mouseup":case"touchend":return this.action={tool:this.tool,color:this.color,size:parseFloat(this.size),font:this.font||"normal 20px sans-serif",events:[]},this.action.events.push({x:e.pageX-this.canvas.offset().left,y:e.pageY-this.canvas.offset().top,event:e.type,text:prompt("Enter text to insert")}),this.actions.push(this.action),this.redraw()}},draw:function(e){var t;return this.setupLine(e),this.context.font=e.font,this.context.fillStyle=n(e),t=e.events[0],this.context.textBaseline="middle",this.context.fillText(t.text,t.x,t.y)}},i=function(){return Math.floor(Math.random()*256)},r=function(){return"rgb("+i()+","+i()+","+i()+")"},n=function(e){return e.color==="random"?r():e.color}})(jQuery);t.moveTo(action.events[0].x, action.events[0].y);
      _ref = action.events;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        event = _ref[_i];
        this.context.lineTo(event.x, event.y);
        previous = event;
      }
      return this.context.stroke();
    }
  };
  $.sketch.tools.eraser = {
    onEvent: function(e) {
      return $.sketch.tools.marker.onEvent.call(this, e);
    },
    draw: function(action) {
      var oldcomposite;
      oldcomposite = this.context.globalCompositeOperation;
      this.context.globalCompositeOperation = "copy";
      action.color = "rgba(0,0,0,0)";
      $.sketch.tools.marker.draw.call(this, action);
      return this.context.globalCompositeOperation = oldcomposite;
    }
  };
  $.sketch.tools.rectangle = {
    onEvent: $.sketch.tools.marker.onEvent,
    draw: function(action) {
      var event, height, original, width;
      this.setupLine(action);
      original = action.events[0];
      this.context.moveTo(original.x, original.y);
      event = action.events[action.events.length - 1];
      width = Math.abs(event.x - original.x);
      height = Math.abs(event.y - original.y);
      return this.context.strokeRect(original.x, original.y, width, height);
    }
  };
  $.sketch.tools.line = {
    onEvent: $.sketch.tools.marker.onEvent,
    draw: function(action) {
      var event;
      this.setupLine(action);
      event = action.events[action.events.length - 1];
      this.context.beginPath();
      this.context.moveTo(action.events[0].x, action.events[0].y);
      this.context.lineTo(event.x, event.y);
      return this.context.stroke();
    }
  };
  $.sketch.tools.circle = {
    onEvent: $.sketch.tools.marker.onEvent,
    draw: function(action) {
      var centerX, centerY, distance, event, original;
      this.setupLine(action);
      original = action.events[0];
      this.context.moveTo(action.events[0].x, action.events[0].y);
      event = action.events[action.events.length - 1];
      centerX = Math.max(event.x, original.x) - Math.abs(event.x - original.x) / 2;
      centerY = Math.max(event.y, original.y) - Math.abs(event.y - original.y) / 2;
      distance = Math.sqrt(Math.sqrt(Math.pow(event.x - original.x, 2)) + Math.pow(event.y - original.y, 2));
      this.context.beginPath();
      this.context.arc(centerX, centerY, distance, Math.PI * 2, 0, true);
      this.context.stroke();
      return this.context.closePath();
    }
  };
  $.sketch.tools.text = {
    onEvent: function(e) {
      switch (e.type) {
        case 'mouseup':
        case 'touchend':
          this.action = {
            tool: this.tool,
            color: this.color,
            size: parseFloat(this.size),
            font: this.font || 'normal 20px sans-serif',
            events: []
          };
          this.action.events.push({
            x: e.pageX - this.canvas.offset().left,
            y: e.pageY - this.canvas.offset().top,
            event: e.type,
            text: prompt("Enter text to insert")
          });
          this.actions.push(this.action);
          return this.redraw();
      }
    },
    draw: function(action) {
      var event;
      this.setupLine(action);
      this.context.font = action.font;
      this.context.fillStyle = getColor(action);
      event = action.events[0];
      this.context.textBaseline = "middle";
      return this.context.fillText(event.text, event.x, event.y);
    }
  };
  randomNumber = function() {
    return Math.floor(Math.random() * 256);
  };
  pickRandomColor = function() {
    return "rgb(" + randomNumber() + "," + randomNumber() + "," + randomNumber() + ")";
  };
  return getColor = function(action) {
    if (action.color === 'random') {
      return pickRandomColor();
    } else {
      return action.color;
    }
  };
})(jQuery);
